import matplotlib.pyplot as plt
fig, axs = plt.subplots(1, 2,figsize=(10,5))
# plt.subplot(1,2,1)
import os
import pandas as pd
import numpy as np
from geopy.distance import great_circle as gr
plt.rcParams['font.sans-serif'] = ['SimHei']  
plt.rcParams['axes.unicode_minus'] = False
r=os.listdir(r'C:\Users\a\bmmtp\bmmtp')
EndT=8.5
DeltaT=0.05
StartT=1
Tpoin=np.arange(StartT,EndT+DeltaT,DeltaT)
minlamdaRatio=2

for j in r:
    a=pd.read_csv(os.path.join(r'C:\Users\a\bmmtp\bmmtp',j))

    w=a.values
    
    lon0=w[0,1]
    lat0=w[1,1]
    lon1=w[2,1]
    lat1=w[3,1]
    Stadist=gr((float(lat0),float(lon0)),(float(lat1),float(lon1))).km
#     print(w[4:,1].shape)
    for k in range(151):
        if k<=149 and k>=1:
            if (abs(w[4:,1][k]-w[4:,1][k-1])>0.25) and (abs(w[4:,1][k]-w[4:,1][k+1])>0.25):
                w[4:,1][k]=(w[4:,1][k-1]+w[4:,1][k+1])/2
#         if (abs(w[4:,1][k]-w[4:,1][k-1])>0.05) and (w[4:,1][k-1]!=0) : 
#             w[4:,1][k:]=np.zeros(151-k)
        if k>=2:
            if abs(w[4:,1][k]-w[4:,1][k-2])>0.05 and (w[4:,1][k]!=0) and (w[4:,1][k-2]!=0):
                w[4:,1][k-2:]=np.zeros(151-(k-2))
        if w[4:,1][k]<1 or w[4:,1][k]>4:
            w[4:,1][k]=0
#         if k>110 and w[4:,1][k]<2 and w[4:,1][k]!=0:
#             w[4:,1]=np.zeros(151)
        if w[4:,1][k]*Tpoin[k]*minlamdaRatio>Stadist:
            w[4:,1][k:]=np.zeros(151-k)
        if k/20<=1.7 and w[4:,1][k]>=3.3:
            w[4:,1][:]=np.zeros(151)
        if k/20>2 and w[4:,1][k]>3.3 and w[4:,1][20]<0.5:
            w[4:,1][:]=np.zeros(151)
    if np.sum(w[4:,1][w[4:,1]>1]<4)<21:
        continue
    q=w[4:,1][w[4:,1]>1]
    axs[0].plot(w[4:,0][w[4:,1]>1][q<4].astype(float)/20+1,w[4:,1][w[4:,1]>1][q<4])
    
axs[0].set_ylim(1,4)
axs[0].set_xlim(1,8.5)
axs[0].set_xlabel('周期(s)',size=15)
axs[0].set_ylabel('相速度 (km/s)',size=15)
axs[0].tick_params(axis='both',labelsize=13)
# axs[0].set_title('Deepdisper',size=15)
# axs[0].ticks_params(axis='y',labelsize=13)
axs[0].text(-0.17,1.05,'(c)',transform=axs[0].transAxes,fontsize=15)
r=os.listdir(r'F:\qc_result')
count=0
for q in r:
    if q[0]=='C':
        count+=1
        f=open(r'F:\qc_result'+'/'+q)
        couns=0
        point=[]
        v=[]
        for w in f.readlines():
            if couns>=2 and float(w.split()[1])!=0:
                point.append(float(w.split()[0]))
                v.append(float(w.split()[1]))
            couns+=1
#             print(point)
#             print(v)
        axs[1].plot(point,v)
axs[1].set_ylim(0.5,4)
axs[1].set_xlim(1,8.5)
axs[1].set_xlabel('周期(s)',size=15)
axs[1].set_ylabel('相速度 (km/s)',size=15)
axs[1].tick_params(axis='both',labelsize=13)
axs[1].text(-0.17,1.05,'(d)',transform=axs[1].transAxes,fontsize=15)
plt.tight_layout()

import os
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
r=os.listdir(r'C:\Users\a\a\dispesp')
from geopy.distance import great_circle as gr
EndT=4.5
DeltaT=0.02
StartT=1.5
Tpoin=np.arange(StartT,EndT+DeltaT,DeltaT)
minlamdaRatio=2
f=open(r'C:\Users\a\a\st.txt','w')
# count=0
for j in r:
    data=np.loadtxt(r'C:\Users\a\a\dispesp'+'\\'+j,usecols=(0,1))
    print(j)
#     print(data.shape)
    lon0=data[0,0]
    lat0=data[0,1]
    lon1=data[1,0]
    lat1=data[1,1]
    dispa=[]
    Stadist=gr((float(lat0),float(lon0)),(float(lat1),float(lon1))).km
    for q in r:
        disp=np.zeros(151)
        data=np.loadtxt(r'C:\Users\a\a\dispesp'+'\\'+q,usecols=(0,1))
        lon0t=data[0,0]
        lat0t=data[0,1]
        lon1t=data[1,0]
        lat1t=data[1,1]
        if (gr((float(lat0),float(lon0)),(float(lat0t),float(lon0t))).km<Stadist/7 and gr((float(lat1),float(lon1)),(float(lat1t),float(lon1t))).km<Stadist/7) or\
        (gr((float(lat0),float(lon0)),(float(lat1t),float(lon1t))).km<Stadist/7 and gr((float(lat1),float(lon1)),(float(lat0t),float(lon0t))).km<Stadist/7):
            startpoint=int((data[2,0]-1)/0.05)
            for i in range(len(data)-2):
                disp[startpoint+i]=data[i+2,1]
#             print(disp)
            if np.max(disp[disp>0])>3.5 or np.min(disp[disp>0])<2.5:
                continue
            f.writelines(str(lon0t)+'\t'+str(lat0t)+'\t'+str(lon1t)+'\t'+str(lat1t)+'\n')
            dispa.append(disp)
    dispa=np.array(dispa)
    f.close()
#     print(dispa.shape)
    for i in range(len(dispa)):
        plt.plot(np.array(range(151))[dispa[i]>0],dispa[i][dispa[i]>0],c='k')
    disp_std=np.zeros(151)
    disp_mean=np.zeros(151)
    for i in range(151):
        ar=dispa[:,i]
        ar=ar[ar!=0]
        disp_std[i]=np.std(ar)
        disp_mean[i]=np.mean(ar)
    for i in range(len(dispa)):
            count=0
            for j in range(151):
                if dispa[i][j]>0:
                    if dispa[i][j]>disp_mean[j]+1.5*disp_std[j]+0.01 or dispa[i][j]<disp_mean[j]-1.5*disp_std[j]-0.01:
                        plt.plot(j,dispa[i][j],marker='*',c='g',markersize=3)
                        count+=1
#             if count>len(dispa[i][dispa[i]>0])*0.4:
#                 print(i)
    for i in range(151):
        if np.isnan(disp_mean[i]) or np.isnan(disp_std[i]):
            continue
        plt.plot([i,i],[disp_mean[i]-1.5*disp_std[i],disp_mean[i]+1.5*disp_std[i]],c='r')
        plt.plot([i-2,i+2],[disp_mean[i]-1.5*disp_std[i],disp_mean[i]-1.5*disp_std[i]],c='r')
        plt.plot([i-2,i+2],[disp_mean[i]+1.5*disp_std[i],disp_mean[i]+1.5*disp_std[i]],c='r')
    plt.ylim(1.5,4.5)
    plt.xticks([0,20,40,60,80,100],np.array([0,20,40,60,80,100])*0.05+1)
    plt.rcParams['font.sans-serif'] = ['KaiTi']
    plt.ylabel('相速度 (km/s)',size=14)
    plt.xlabel('周期 (S)',size=14)
    break
